CREATE TABLE IF NOT EXISTS N_ONE_ROLES
(
	ID int not null auto_increment,
	TITLE varchar(100) not null,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS N_ONE_USERS
(
	ID int not null auto_increment,
	IS_ACTIVE bool not null DEFAULT TRUE,
	ROLE_ID int not null,
	NAME varchar(300),
	EMAIL varchar(100) not null,
	PASSWORD varchar(300),
	PHONE_NUMBER varchar(15) not null,
	ADDRESS varchar(500),
	DATE_CREATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	DATE_UPDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (ID),
	FOREIGN KEY FK_USERS_ROLES (ROLE_ID)
		REFERENCES N_ONE_ROLES(ID)
		ON UPDATE RESTRICT
		ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS N_ONE_TAGS
(
	ID int not null auto_increment,
	IS_ACTIVE bool not null DEFAULT TRUE,
	TITLE varchar(100) not null,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS N_ONE_ITEMS
(
	ID int not null auto_increment,
	IS_ACTIVE bool not null DEFAULT TRUE,
	TITLE varchar(100) not null,
	PRICE int not null,
	DESCRIPTION text not null,
	SORT_ORDER int not null default 0,
	DATE_CREATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	DATE_UPDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (ID),
	FULLTEXT KEY `ft1` (TITLE, DESCRIPTION),
	INDEX (PRICE)
);

CREATE TABLE IF NOT EXISTS N_ONE_ITEMS_TAGS
(
	ITEM_ID int not null,
	TAG_ID int not null,
	PRIMARY KEY (ITEM_ID, TAG_ID),
	FOREIGN KEY FK_IT_ITEMS (ITEM_ID)
		REFERENCES N_ONE_ITEMS(ID)
		ON UPDATE RESTRICT
		ON DELETE RESTRICT,
	FOREIGN KEY FK_IT_TAGS (TAG_ID)
		REFERENCES N_ONE_TAGS(ID)
		ON UPDATE RESTRICT
		ON DELETE RESTRICT
);


CREATE TABLE IF NOT EXISTS N_ONE_STATUSES
(
	ID int not null auto_increment,
	TITLE varchar(100) not null,
	PRIMARY KEY (ID)
);

CREATE TABLE IF NOT EXISTS N_ONE_ORDERS
(
	ID int not null auto_increment,
	IS_ACTIVE bool not null DEFAULT TRUE,
	USER_ID int not null,
	ITEM_ID int not null,
	STATUS_ID int not null,
	PRICE int not null,
	DATE_CREATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	DATE_UPDATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
	PRIMARY KEY (ID),
	FOREIGN KEY FK_ORDERS_USERS (USER_ID)
		REFERENCES N_ONE_USERS(ID)
		ON UPDATE RESTRICT
		ON DELETE RESTRICT,
	FOREIGN KEY FK_ORDERS_ITEMS (ITEM_ID)
		REFERENCES N_ONE_ITEMS(ID)
		ON UPDATE RESTRICT
		ON DELETE RESTRICT,
	FOREIGN KEY FK_ORDERS_STATUSES (STATUS_ID)
		REFERENCES N_ONE_STATUSES(ID)
		ON UPDATE RESTRICT
		ON DELETE RESTRICT
);
